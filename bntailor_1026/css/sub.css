@charset "UTF-8";
/* 기본 글자 색상 */
/* 제목에 들어가는 글자 색상 */
/* 기본 회색 */
/* 밝은 회색 */
/* 어두운 배경에 사용할 기본 하얀 색상 */
/* 어두운 배경 위 제목에 사용할 하얀 색상 */
/*
    scss에서 mixin은 특정 스타일의 속성명과 속성값을 모두 선언하는 방식 (여러 개)
    변수는 특정 속성값 단 한 개를 저장하는 방식 (변수 하나 당 하나의 속성값)
    -> 변수의 값은 어느 속성에 사용해도 상관없음
*/
/* 모든 태그의 스타일 초기화 */
/* 모든 태그에 브라우저에서 주는 여백을 삭제 */
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;400;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Noto+Serif+KR:wght@400;700&display=swap");
body, header, footer, div, nav, section, h1, h2, h3, h4, h5, h6, button, a, ul, ol, li, address, strong, span, em, p, i, dl, dt, dd, form, fieldset, legend, input, textarea, select, table, caption, colgroup, col, thead, tbody, tfoot, tr, th, td {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  /* width/height와 padding결합되면 사이즈가 늘어남. 이걸 막는 스타일
     padding을 줘도 width/height가 유지가 됨 */
}

/* a태그에 브라우저가 주는 기본 속성 초기화 */
a {
  color: inherit;
  text-decoration: none;
}

/* 브라우저에서 기울임을 주는 것을 초기화 */
em, address {
  font-style: normal;
}

/* 항목 앞에 동그라미 삭제 */
ul, ol, li {
  list-style: none;
}

/* form태그가 문자 스타일을 상속받지 않아서 상속받게 하기 */
form, input, select, textarea, button {
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  letter-spacing: inherit;
  /* 서체 상속 - button은 body에서 적용한 서체를 
     자동으로 상속 받지 않음 - form관련 태그는 다 그럼 */
}

fieldset {
  border: 0;
}

legend {
  display: none; /* form 태그의 legend은 타이틀로 숨김처리 */
}

button {
  background-color: transparent; /* 투명 */
  border: 0;
  cursor: pointer; /* 마우스 오버 시 손바닥 모양 */
}

table caption {
  display: none;
}

/* 글자를 두껍게 하는 태그는 모두 일반 두께로 변형 */
h1, h2, h3, h4, h5, h6, strong, th {
  font-weight: 400;
}

/* 모든 페이지에 공통 들어가는 스타일 (header/footer) */
/* 본고딕 */
/* 본명조 */
html, body {
  color: #3d3d3d;
  line-height: 1.5;
  font-family: "Noto Sans KR", "NanumGothic", "Malgun Gothic", "Apple SD Gothic", "Apple SD Gothic Neo", "Dotum", sans-serif;
  font-size: 16px;
  font-weight: 400;
  /* letter-spacing: -0.05em; */
  word-break: keep-all; /* 단어별 줄바꿈 */
}

#wrap { /* id="wrap" */
  overflow: hidden;
  position: relative;
  min-width: 320px;
}

/* 콘텐츠의 넓이를 제한하고 홈페이지를 브라우저 가운데 배치 */
.wrapper {
  width: 100%;
  max-width: 1440px;
  padding: 0 20px;
  margin: 0 auto;
  /* 1400px 이하부터 320px까지 모든 사이즈 반응형 
     1400px 일때에도 좌우에 여백은 유지해야함 
     (1400이상에서 1400px이하로 변경되는 점 - 반응형으로 전환되는점)
     부드럽게 여백을 유지하면서 전환
     원래 좌우에 여백이 20px씩 들어가 있는 걸로 스타일을 줌
     1400px이 콘텐츠 영역인데 왼쪽 20 + 오른쪽 20 = 1440px이 넓이
     padding으로 좌우에 여백을 20px씩 줌  */
}

@media screen and (max-width: 1000px) {
  html, body {
    font-size: 14px;
  }
}
@media screen and (max-width: 640px) {
  html, body {
    font-size: 13px;
  }
} /* media 종료 */
.clearfix::after {
  display: block;
  clear: both;
  content: ".";
  visibility: hidden;
  height: 0;
}

.clearfix {
  display: block;
}

/* wrapper와 동일한 사이즈를 갖은 position:relative를 요소는
   cnt_wrap 클래스 줌 */
.cnt_wrap {
  position: relative;
}

.skip_nav {
  position: absolute;
  left: 0;
  top: 0;
  z-index: 1000000000;
  width: 100%;
}

.skip_nav a {
  position: absolute;
  left: 0;
  top: -1000px;
  width: 100%;
  height: 40px;
  line-height: 40px;
  background-color: #0059A8;
  color: #FFF;
  text-align: center;
}

.skip_nav a:focus {
  top: 0;
}

/* 브라우저에서 글자를 드래그했을대 드래그한 영역의 색과 글자색
  -moz- -webkit- 이 앞에 붙은 속성은 표준화 되지 않은 속성  */
::selection {
  background: #CBA585;
  color: #3E3E3F;
}

::-moz-selection {
  background: #CBA585;
  color: #3E3E3F;
}

::-webkit-selection {
  background: #CBA585;
  color: #3E3E3F;
}

.header {
  position: absolute;
  left: 0;
  top: 0;
  z-index: 300;
  width: 100%;
  height: 100px;
  transition: 0.5s;
}
.header .logo {
  float: left;
  margin: 25px 0 0 50px;
}
.header .logo svg {
  width: 160px;
}
.header .logo svg text {
  fill: #FFF;
}
.header .gnb {
  float: right;
  margin: 0 40px 0 0;
}
.header .gnb .gnb_open {
  display: none;
}
.header .gnb .gnb_wrap ul li {
  float: left;
}
.header .gnb .gnb_wrap ul li a {
  display: block;
  padding: 0 40px;
  font-family: "Noto Serif KR", serif;
  color: #ffffff;
  font-size: 18px;
  font-weight: 400;
  line-height: 100px;
}

@media screen and (max-width: 1550px) {
  .header .logo a svg {
    width: 140px;
  }
  .header .gnb .gnb_wrap ul li a {
    font-size: 15px;
    padding: 0 30px;
  }
}
@media screen and (max-width: 1250px) {
  .header .logo a svg {
    width: 120px;
  }
  .header .gnb .gnb_wrap ul li a {
    font-size: 14px;
    padding: 0 20px;
  }
}
@media screen and (max-width: 1050px) {
  .header {
    height: 60px;
  }
  .header .logo {
    margin: 8px 0 0 20px;
  }
  .header .logo a svg {
    width: 108px;
  }
  .header .gnb {
    margin: 0;
    /* 모바일 메뉴가 열렸을 때 */
  }
  .header .gnb .gnb_open {
    display: block;
    position: relative;
    z-index: 2;
    width: 60px;
    height: 60px;
  }
  .header .gnb .gnb_open strong {
    display: none;
  }
  .header .gnb .gnb_open span {
    position: absolute;
    right: 20px;
    width: 25px;
    height: 2px;
    background-color: #FFF;
    transition: 0.3s;
  }
  .header .gnb .gnb_open span.line1 {
    top: 22px;
  }
  .header .gnb .gnb_open span.line2 {
    top: 29px;
    width: 16px;
  }
  .header .gnb .gnb_open span.line3 {
    top: 36px;
  }
  .header .gnb .gnb_wrap {
    display: block;
    position: absolute;
    right: -100%;
    top: 0;
    z-index: 1;
    width: 100%;
    max-width: 500px;
    height: 100vh;
    background-color: #FFF;
    color: #3d3d3d;
    transition: right 0.5s;
  }
  .header .gnb .gnb_wrap ul {
    margin: 60px 0 0 0;
  }
  .header .gnb .gnb_wrap ul li {
    float: none;
    border-bottom: 1px solid #ededed;
  }
  .header .gnb .gnb_wrap ul li a {
    font-family: "Noto Serif KR", serif;
    padding: 0;
    color: #3d3d3d;
    font-size: 20px;
    font-weight: 700;
    line-height: 80px;
    text-align: center;
  }
  .header .gnb .gnb_wrap ul li:first-child {
    border-top: 1px solid #ededed;
  }
  .header .gnb::after {
    /*
        메뉴 뒷배경을 검은색으로 채울 땐
        position: fixed;
        left, right, top, bottom를 모두 0으로 주면
        left: 0;, top: 0;, width: 100%;, height: 100%;와 동일하게 들어감

        <div class="gnb">
        <button class="gnb_open"></button>
        <div class="gnb_wrap"></div>
        ::after -- gnb::after
        </div>
        ㄴ 위와 같은 구조에서
            gnb_open과 gnb_wrap, gnb::after의 순서를 조정할 수 있음
            z-index는 이렇게 나란히 들어간 요소들 사이에서 높은 숫자가 위로 올라감

        <button class="gnb_open"></button>
        <div class="gnb_wrap">
            ::after -- gnb_wrap::after
        </div>
        ㄴ 이런 구조라면 gnb_wrap::after는 gnb_wrap 안에 존재하기 때문에
            그 밖에 있는 gnb_open, gnb_wrap의 순서를 절대 조정할 수 없음
    */
    display: none;
    opacity: 0;
    transition: opacity 0.5s;
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.7);
    content: "";
  }
  .header .gnb.mobile_open .gnb_open span {
    width: 26px;
    background-color: #3d3d3d;
  }
  .header .gnb.mobile_open .gnb_open span.line1 {
    top: 29px;
    transform: rotate(45deg);
  }
  .header .gnb.mobile_open .gnb_open span.line2 {
    right: -27px;
  }
  .header .gnb.mobile_open .gnb_open span.line3 {
    top: 29px;
    transform: rotate(-45deg);
  }
  .header .gnb.mobile_open .gnb_wrap {
    right: 0;
  }
  .header .gnb.mobile_open::after {
    display: block;
    opacity: 1;
  }
}
.footer {
  display: block;
  padding: 65px 0;
  background-color: #33302D;
  color: rgba(255, 255, 255, 0.8);
}
.footer::after {
  display: block;
  clear: both;
  content: ".";
  visibility: hidden;
  height: 0;
}
.footer .sns {
  float: right;
}
.footer .sns ul li {
  float: left;
}
.footer .sns ul li a {
  display: block;
  position: relative;
  width: 49px;
  height: 49px;
  border-width: 1px 1px 1px 0;
  border-style: solid;
  border-color: rgba(255, 255, 255, 0.1);
  font-size: 0;
  line-height: 0;
}
.footer .sns ul li a::before {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  /* 배경이미지가 한개를 보이는 영역을 제한해서 써야하기 때문에
     before, after에서 표시.
     이때 before, after의 사이즈는 내가 사용할 아이콘의 넓이
     - 저장할때 활용된 아이콘의 넓이 */
  width: 30px;
  height: 30px;
  background-image: url(/code/bntailor_1026/images/common/footer_ico.svg);
  background-repeat: no-repeat;
  content: "";
}
.footer .sns ul li:first-child a {
  border-left-width: 1px;
}
.footer .sns ul li.facebook a::before {
  background-position: left top;
}
.footer .sns ul li.instagram a::before {
  background-position: left -30px top;
}
.footer .sns ul li.naver a::before {
  background-position: left -60px top;
}
.footer .inner {
  float: left;
}

@media screen and (max-width: 1000px) {
  .footer {
    padding: 58px 0 95px 0;
  }
  .footer .sns {
    display: block;
    float: none;
    margin: 0 0 20px 0;
  }
  .footer .sns::after {
    display: block;
    clear: both;
    content: ".";
    visibility: hidden;
    height: 0;
  }
  .footer .inner {
    float: none;
  }
  .footer .inner .finfo span {
    margin: 0 15px 5px 0;
  }
}
.header.fixed {
  position: fixed;
  background-color: rgba(255, 255, 255, 0.7);
}
.header.fixed .logo svg text {
  fill: #3d3d3d;
}
.header.fixed .gnb .gnb_wrap ul li a {
  color: #3d3d3d;
}
.header.fixed .gnb .gnb_open span {
  background-color: #3d3d3d;
}

/* 서브 공통 레이아웃 */
.sub_visual {
  position: relative;
  height: 711px;
  margin: 0 0 20px 0;
}
.sub_visual .sub_visual_bg {
  position: absolute;
  left: 0;
  top: 0;
  z-index: -1;
  width: 100%;
  height: 720px; /* clip-path로 위치가 정확하지 않아 배경을 별도의 요소에 줌 */
  background-image: url(/code/bntailor_1026/images/sub/sub_visual1.png);
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  clip-path: url(#sub_visual_path);
  /*
      html에서 입력한 svg clipPath에 지정된 id값을 url로 연결하면
      해당 요소의 path 값이 배경을 표시할 영역으로 적용됨
      path로 직접 경로를 사용했는데 안되는 경우, svg path의 크기를 변경해야하는 경우
      이런 방식을 사용함
  */
}
.sub_visual.sub_bg1 .sub_visual_bg {
  background-image: url(/code/bntailor_1026/images/sub/sub_visual1.png);
}
.sub_visual.sub_bg2 .sub_visual_bg {
  background-image: url(/code/bntailor_1026/images/sub/sub_visual2.png);
}
.sub_visual.sub_bg3 .sub_visual_bg {
  background-image: url(/code/bntailor_1026/images/sub/sub_visual3.png);
}
.sub_visual.sub_bg4 .sub_visual_bg {
  background-image: url(/code/bntailor_1026/images/sub/sub_visual4.png);
}
.sub_visual.sub_bg5 .sub_visual_bg {
  background-image: url(/code/bntailor_1026/images/sub/sub_visual5.png);
}
.sub_visual.sub_bg6 .sub_visual_bg {
  background-image: url(/code/bntailor_1026/images/sub/sub_visual6.png);
}
.sub_visual.sub_bg7 .sub_visual_bg {
  background-image: url(/code/bntailor_1026/images/sub/sub_visual7.png);
}
.sub_visual .sub_visual_path {
  position: absolute;
  right: 0;
  bottom: 0;
}
.sub_visual .sub_visual_path svg {
  width: 1px;
  height: 1px;
}
.sub_visual .location {
  display: flex;
  padding: 385px 0 0 5px;
  color: #ffffff;
}
.sub_visual .location span {
  position: relative;
  margin-right: 25px;
}
.sub_visual .location span::after {
  position: absolute;
  right: -18px;
  top: 8px;
  width: 10px;
  height: 10px;
  background-color: #fff;
  clip-path: polygon(50% 0%, 75% 0%, 50% 50%, 75% 100%, 50% 100%, 25% 50%);
  /*
      이미지로 하는 것이 아니라 svg를 이용해서 아이콘을 그리는데
      여러번 반복해서 들어가는 경우 css에서 원하는 도형의 크기와 넓이를 주고
      배경색으로 아이콘의 색상을 주고 clip-path: 로 path 값을 준다

      장점 1. 여러 요소를 선택해서 도형을 그릴 수 있음

      단점 1. 사이즈를 수정할 수 없음 (단, %로 path를 그릴 것은 가능)
           2. 작은 것은 적용이 안됨
           3. 브라우저 호환성이 떨어짐 (안되는 브라우저가 있음)
           4. path를 그리는 방법이 많은데 적용이 안됨 (html에서는 실행돼도 css에서 안됨)
  */
  content: "";
}
.sub_visual .location span:last-child::after {
  display: none;
}
.sub_visual .tit {
  font-family: "Noto Serif KR", serif;
  color: #ffffff;
  font-size: 60px;
  font-weight: 700;
}

@media screen and (max-width: 800px) {
  .sub_visual {
    margin: 0;
    height: 250px;
  }
  .sub_visual .sub_visual_bg {
    height: 100%;
    clip-path: none;
  }
  .sub_visual .location {
    padding: 152px 0 0 0;
  }
  .sub_visual .location span {
    margin-right: 15px;
  }
  .sub_visual .location span::after {
    right: -13px;
    top: 5px;
  }
  .sub_visual .tit {
    font-size: 30px;
  }
}
.lnb {
  position: relative;
  height: 100px;
}
.lnb .lnb_fix {
  /*
      나중에 fixed로 변경될 콘텐츠
          ㄴ absolute로 코딩하는 게 좋음
  */
  position: absolute;
  left: 0;
  top: 0;
  z-index: 200;
  width: 100%;
  height: 100px;
}
.lnb.fixed .lnb_fix {
  position: fixed;
  top: 100px; /* header 높이만큼 아래로 내려야함 */
  background-color: rgba(255, 255, 255, 0.7);
}
.lnb .lnb_wrap {
  overflow-x: auto;
  overflow-y: hidden;
  padding: 37px 0 0 0;
  /*
      lnb_wrap의 넓이보다 ul의 넓이가 더 길어질 때만 스크롤바가 생성되게하는 요소
  */
}
.lnb .lnb_wrap ul {
  white-space: nowrap;
  /*
      하위 요소들 줄바꿈 금지
          ㄴ 블럭 요소, float 들어간 요소들은 적용 안됨
             inline 요소나 inline-block만 적용됨
             단, inline-block 요소의 사이사이에 space 한 칸의 여백이 들어감
             이를 감안해서 요소들 사이의 여백을 줄이면 해결됨
  */
}
.lnb .lnb_wrap ul li {
  display: inline-block;
}
.lnb .lnb_wrap ul li a {
  display: block;
  padding: 0 28px;
  color: #999;
  font-size: 25px;
  font-weight: 700;
}
.lnb .lnb_wrap ul li:first-child a {
  padding-left: 0;
}
.lnb .lnb_wrap ul li.active a {
  position: relative;
  color: #3d3d3d;
}
.lnb .lnb_wrap ul li.active a::before {
  position: absolute;
  left: 0;
  top: 0;
  width: 19px;
  height: 2px;
  background-color: #9D856D;
  content: "";
}

@media screen and (max-width: 800px) {
  .lnb {
    height: 50px;
  }
  .lnb .lnb_fix {
    height: 50px;
  }
  .lnb.fixed .lnb_fix {
    top: 60px;
  }
  .lnb .lnb_wrap {
    padding: 12px 0 0 0;
  }
  .lnb .lnb_wrap ul li a {
    padding: 0 20px;
    font-size: 20px;
  }
}